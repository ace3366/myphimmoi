{"version":3,"sources":["pages/browse/Browse.module.css","pages/search/SearchForm.module.css","pages/search/ResultList.module.css","pages/components/upper/Banner.module.css","pages/components/upper/NavBar.module.css","pages/components/middle/MovieDetail.module.css","pages/components/middle/MovieList.module.css","pages/search/Search.module.css","pages/components/upper/NavBar.jsx","pages/components/upper/Banner.jsx","pages/util/bannerAccess.js","pages/hooks/useHttpTrailer.jsx","pages/util/trailerAccess.js","pages/components/middle/Movie.jsx","pages/components/middle/MovieDetail.jsx","pages/components/middle/MovieList.jsx","pages/browse/Browse.jsx","pages/hooks/useHttpAll.jsx","pages/search/SearchForm.jsx","pages/search/ResultList.jsx","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","scrolled","setScrolled","useState","window","onscroll","scrollY","React","createElement","id","className","classes","navbar","style","backgroundColor","href","concat","icon","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","banner","Banner","_ref","movData","movieData","results","Math","floor","random","length","imgPath","backdrop_path","src","alt","overlay","about","name","title","overview","slice","useHttpTrailer","trailerExtract","inviMov","setInviMov","trailerData","setTrailerData","isLoading","setIsLoading","useEffect","async","request","fetch","resData","json","ok","Error","err","console","error","sendRequest","infoHandler","choosenMov","prevMov","trailer","find","trail","type","Movie","poster","infoPop","poster_path","onClick","MovieDefault","info","release_date","vote_average","width","height","key","MovieList","movie","map","data","MovieDetail","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","category","newRequest","Object","entries","Browse","movLoad","movieRequest","setMovieData","log","responses","Promise","all","response","useHttpAll","reqMov","reduce","acc","index","upper","original","middle","og","topRated","action","comedy","horror","romance","document","SearchForm","searchHandler","searchValue","useRef","form","ref","current","value","reset","search","ResultList","searchedData","Search","searchFounded","setSearchFounded","query","footer","App","BrowserRouter","Routes","Route","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e6b154b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"upper\":\"Browse_upper__1IXWz\",\"middle\":\"Browse_middle__1FEtY\",\"movie-section\":\"Browse_movie-section__2IMrs\",\"og\":\"Browse_og__1i9-z\",\"the-others\":\"Browse_the-others__2-hEA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__3AvX9\",\"form-input\":\"SearchForm_form-input__3TCFl\",\"icon\":\"SearchForm_icon__3C7l9\",\"form-action\":\"SearchForm_form-action__2S5cH\",\"reset\":\"SearchForm_reset__xPSpn\",\"search\":\"SearchForm_search__NU1qy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"ResultList_poster__1mrMC\",\"search-container\":\"ResultList_search-container__2VdZ6\",\"search-list\":\"ResultList_search-list__TCVmE\",\"info-container\":\"ResultList_info-container__1sFy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__3dFOM\",\"banner-img\":\"Banner_banner-img__3L3Tb\",\"overlay\":\"Banner_overlay__2cjIh\",\"about\":\"Banner_about__3wbFj\",\"loading\":\"Banner_loading__ANAvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__IsFtp\",\"app-name\":\"NavBar_app-name__15RLs\",\"icon\":\"NavBar_icon__2J7AE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"MovieDetail_info__2MqdB\",\"trailer-info\":\"MovieDetail_trailer-info__1SQ8b\",\"trailer-media\":\"MovieDetail_trailer-media__17T3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mov-list\":\"MovieList_mov-list__1ARvC\",\"movie\":\"MovieList_movie__3HpAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Search_footer__1I7Uk\"};","import React from \"react\";\r\nimport classes from \"./NavBar.module.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function NavBar() {\r\n  const [scrolled, setScrolled] = useState(false);\r\n  // Bắt sự kiện scroll để hiển thị naBar\r\n  window.onscroll = function () {\r\n    if (window.scrollY > 100) {\r\n      setScrolled(true);\r\n    } else {\r\n      setScrolled(false);\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      id=\"navBar\"\r\n      className={classes.navbar}\r\n      style={{ backgroundColor: scrolled && \"black\" }}\r\n    >\r\n      <a href=\"/myphimmoi\" className={classes[\"app-name\"]}>\r\n        Movie App\r\n      </a>\r\n      <a href=\"/myphimmoi/search\">\r\n        <svg\r\n          className={`svg-inline--fa fa-search fa-w-16 ${classes.icon}`}\r\n          fill=\"#ccc\"\r\n          aria-hidden=\"true\"\r\n          data-prefix=\"fas\"\r\n          data-icon=\"search\"\r\n          role=\"img\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 512 512\"\r\n        >\r\n          <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n        </svg>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import { useContext } from \"react\";\r\n// import ApiContext from \"../../store/api-contex\";\r\n\r\nimport classes from \"./Banner.module.css\";\r\nimport { bannerAccess } from \"../../util/bannerAccess.js\";\r\n\r\nlet banner = {};\r\nexport default function Banner({ movData }) {\r\n  // // Lấy url từ Context\r\n  // const requests = useContext(ApiContext);\r\n  // // Lấy data từ http request\r\n  // const { movieData: ogData, isLoading: ogLoad } = useHttp(\r\n  //   requests.fetchNetflixOriginals\r\n  // );\r\n  // Kiểm tra data đã load xong chưa để lấy banner ra và render\r\n\r\n  banner = bannerAccess(movData);\r\n  const imgPath = `https://image.tmdb.org/t/p/original${banner.backdrop_path}`;\r\n  return (\r\n    <div className={classes.banner}>\r\n      <img className={classes[\"banner-img\"]} src={imgPath} alt=\"banner\" />\r\n      <div className={classes.overlay}></div>\r\n      <div className={classes.about}>\r\n        <h2>{banner.name || banner.title}</h2>\r\n        <button>Play</button>\r\n        <button>My List</button>\r\n        <p>{banner.overview.slice(0, 100)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function bannerAccess(movieData) {\r\n  return movieData.results[\r\n    Math.floor(Math.random() * movieData.results.length - 1)\r\n  ];\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nexport function useHttpTrailer(trailerExtract) {\r\n  const [inviMov, setInviMov] = useState(null);\r\n  const [trailerData, setTrailerData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const API_KEY = \"292c6915aed6c1ea24bb47d8b5d3ca92\";\r\n\r\n  function infoHandler(choosenMov) {\r\n    // Kiểm tra cú click này có trùng movie với lần trước không\r\n    // Nếu trùng thì đóng phần info\r\n    // Nếu không thì hiện info movie khác\r\n    setInviMov((prevMov) => (prevMov === choosenMov ? null : choosenMov));\r\n  }\r\n  useEffect(() => {\r\n    async function sendRequest() {\r\n      setIsLoading(true);\r\n      try {\r\n        // Gửi request lấy trailer\r\n        const request = await fetch(\r\n          `https://api.themoviedb.org/3/movie/${\r\n            inviMov && inviMov.id\r\n          }/videos?api_key=${API_KEY} `\r\n        );\r\n        const resData = await request.json();\r\n        // Lấy dữ liệu trailer, nếu không có kết quả nào thoả thì trả về null\r\n        // Lưu thông tin trailer nhận được\r\n        setTrailerData(trailerExtract(resData));\r\n        if (!request.ok) {\r\n          throw new Error(\"Failed to fetch movie\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        // Nếu không fetch được data trailer thì thực hiện chức năng như bình thường\r\n        // Đồng thời cho dữ liệu trailer là null để hiển thị backdrop thay thế\r\n        setTrailerData(null);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n\r\n    sendRequest();\r\n  }, [inviMov]);\r\n\r\n  return {\r\n    inviMov,\r\n    trailerData,\r\n    isLoading,\r\n    infoHandler,\r\n  };\r\n}\r\n","// Hàm tìm trailer\r\nexport function trailerExtract(trailer) {\r\n  // Tìm Trailer, nếu không có Trailer chuyển sang tìm Teaser\r\n  if (trailer) {\r\n    return (\r\n      trailer.results.find((trail) => trail.type === \"Trailer\") ||\r\n      trailer.results.find((trail) => trail.type === \"Teaser\")\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Movie({ poster, movData, infoPop }) {\r\n  return (\r\n    <li>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/original${\r\n          poster ? movData.poster_path : movData.backdrop_path\r\n        }`}\r\n        alt=\"\"\r\n        onClick={() => {\r\n          infoPop(movData);\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./MovieDetail.module.css\";\r\nexport default function MovieDefault({ inviMov, trailerData }) {\r\n  return (\r\n    <div className={classes.info}>\r\n      <section className={classes[\"trailer-info\"]}>\r\n        <h3>{inviMov.title || inviMov.name}</h3>\r\n        <div>Release Date: {inviMov.release_date}</div>\r\n        <div>Vote : {inviMov.vote_average}</div>\r\n        <p>{inviMov.overview}</p>\r\n      </section>\r\n      <section className={classes[\"trailer-media\"]}>\r\n        {/* Nếu có trailer thì hiện trailer, không có sẽ hiện backdrop */}\r\n        {trailerData ? (\r\n          <iframe\r\n            width=\"100%\"\r\n            height=\"400\"\r\n            src={`https://www.youtube.com/embed/${trailerData.key}`}\r\n          ></iframe>\r\n        ) : (\r\n          <div>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original${inviMov.backdrop_path}`}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n// import { useContext } from \"react\";\r\n// import ApiContext from \"../../store/api-contex\";\r\nimport { useHttpTrailer } from \"../../hooks/useHttpTrailer\";\r\nimport { trailerExtract } from \"../../util/trailerAccess.js\";\r\nimport classes from \"./MovieList.module.css\";\r\nimport Movie from \"./Movie\";\r\nimport MovieDetail from \"./MovieDetail\";\r\n\r\nexport default function MovieList({ poster, movData }) {\r\n  const { inviMov, trailerData, isLoading, infoHandler } =\r\n    useHttpTrailer(trailerExtract);\r\n  return (\r\n    <div className={classes[\"mov-list\"]}>\r\n      {/* Phần hiển thị list phim */}\r\n      <ul className={classes.movie}>\r\n        {movData.results.map((data) => (\r\n          <Movie\r\n            infoPop={infoHandler}\r\n            poster={poster}\r\n            key={data.id}\r\n            movData={data}\r\n          ></Movie>\r\n        ))}\r\n      </ul>\r\n      {/* Phần hiển thị thông tin khi người dùng click */}\r\n      {inviMov && (\r\n        <MovieDetail inviMov={inviMov} trailerData={trailerData}></MovieDetail>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n// import { useState, useEffect } from \"react\";\nimport classes from \"./Browse.module.css\";\n\n// import { useContext } from \"react\";\n// import ApiContext from \"../store/api-contex\";\nimport { useHttpAll } from \"../hooks/useHttpAll\";\n\nimport NavBar from \"../components/upper/NavBar\";\nimport Banner from \"../components/upper/Banner\";\nimport MovieList from \"../components/middle/MovieList\";\n\nconst API_KEY = \"292c6915aed6c1ea24bb47d8b5d3ca92\";\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\n};\nconst category = [\n  \"original\",\n  \"trending\",\n  \"topRated\",\n  \"action\",\n  \"comedy\",\n  \"horror\",\n  \"romance\",\n  \"document\",\n];\nconst newRequest = Object.entries(requests).slice(0, -1);\nfunction Browse() {\n  // console.log(newRequest);\n  const { movieData: movData, isLoading: movLoad } = useHttpAll(newRequest);\n\n  const reqMov = category.reduce((acc, key, index) => {\n    acc[key] = movData[index];\n    return acc;\n  }, {});\n\n  // console.log(reqMov);\n  // Kiểm tra data đã nhận được chưa để render ra web\n  if (!movLoad) {\n    return (\n      <div className=\"app\">\n        <div className={classes.upper}>\n          {\" \"}\n          <NavBar></NavBar>\n          <Banner movData={reqMov.original}></Banner>\n        </div>\n        <div className={classes.middle}>\n          <div className={classes.og}>\n            <MovieList poster={true} movData={reqMov.original}></MovieList>\n          </div>\n          <div className={classes[\"the-others\"]}>\n            <div className={classes[\"movie-section\"]}>\n              {\" \"}\n              <h2>Xếp hạng cao</h2>\n              <MovieList movData={reqMov.topRated}></MovieList>\n            </div>\n\n            <div className={classes[\"movie-section\"]}>\n              <h2>Hành động</h2>\n              <MovieList movData={reqMov.action}></MovieList>\n            </div>\n\n            <div className={classes[\"movie-section\"]}>\n              <h2>Hài</h2>\n              <MovieList movData={reqMov.comedy}></MovieList>\n            </div>\n\n            <div className={classes[\"movie-section\"]}>\n              {\" \"}\n              <h2>Kinh dị</h2>\n              <MovieList movData={reqMov.horror}></MovieList>\n            </div>\n\n            <div className={classes[\"movie-section\"]}>\n              {\" \"}\n              <h2>Lãng mạn</h2>\n              <MovieList movData={reqMov.romance}></MovieList>\n            </div>\n\n            <div className={classes[\"movie-section\"]}>\n              {\" \"}\n              <h2>Tài liệu</h2>\n              <MovieList movData={reqMov.document}></MovieList>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <div>Loading...</div>;\n  }\n}\n\nexport default Browse;\n","import { useState, useEffect } from \"react\";\r\nexport function useHttpAll(movieRequest) {\r\n  const [movieData, setMovieData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function sendRequest() {\r\n      console.log(\"fetching\");\r\n      setIsLoading(true);\r\n      try {\r\n        // Lấy 1 lượt tất cả thể loại phim vào 1 array\r\n        const request = movieRequest.map((movie) =>\r\n          fetch(`https://api.themoviedb.org/3${movie[1]} `)\r\n        );\r\n        const responses = await Promise.all(request);\r\n        const resData = await Promise.all(\r\n          responses.map((response) => response.json())\r\n        );\r\n        // Lưu vào resData để đưa ra\r\n        setMovieData(resData);\r\n        if (!request.ok) {\r\n          throw new Error(\"Failed to fetch movie\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    sendRequest();\r\n  }, []);\r\n\r\n  // Gọi hàm chạy ở lần render đầu tiên\r\n\r\n  return {\r\n    movieData,\r\n    isLoading,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useRef } from \"react\";\r\nimport classes from \"./SearchForm.module.css\";\r\n\r\nexport default function SearchForm({ searchHandler }) {\r\n  const searchValue = useRef();\r\n  return (\r\n    <div>\r\n      <form action=\"\" className={classes.form}>\r\n        <div className={classes[\"form-input\"]}>\r\n          <input ref={searchValue} type=\"text\" />\r\n          <svg\r\n            className={`svg-inline--fa fa-search fa-w-16 ${classes.icon}`}\r\n            fill=\"#ccc\"\r\n            aria-hidden=\"true\"\r\n            data-prefix=\"fas\"\r\n            data-icon=\"search\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 512 512\"\r\n          >\r\n            <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n          </svg>\r\n        </div>\r\n\r\n        <div className={classes[\"form-action\"]}>\r\n          <button\r\n            onClick={() => {\r\n              searchValue.current.value = \"\";\r\n            }}\r\n            type=\"button\"\r\n            className={classes.reset}\r\n          >\r\n            RESET\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              searchHandler(searchValue.current.value);\r\n            }}\r\n            type=\"button\"\r\n            className={classes.search}\r\n          >\r\n            SEARCH{\" \"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./ResultList.module.css\";\r\nimport { useHttpTrailer } from \"../hooks/useHttpTrailer\";\r\nimport { trailerExtract } from \"../util/trailerAccess.js\";\r\nimport MovieDetail from \"../components/middle/MovieDetail\";\r\n\r\nlet dataTrailer = {};\r\nexport default function ResultList({ searchedData }) {\r\n  const { inviMov, trailerData, isLoading, infoHandler } =\r\n    useHttpTrailer(trailerExtract);\r\n  return (\r\n    <div className={classes[\"search-container\"]}>\r\n      <h2>Search Result</h2>\r\n      <ul className={classes[\"search-list\"]}>\r\n        {searchedData.map((movie) => (\r\n          <li>\r\n            {\" \"}\r\n            {movie.poster_path ? (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\r\n                alt=\"\"\r\n                className={classes.poster}\r\n                onClick={() => {\r\n                  infoHandler(movie);\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className={classes.poster}>\r\n                {\" \"}\r\n                <h3>Not found</h3>{\" \"}\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {/* Phần hiển thị thông tin khi người dùng click */}\r\n      <div className={classes[\"info-container\"]}>\r\n        {inviMov && (\r\n          <MovieDetail\r\n            inviMov={inviMov}\r\n            trailerData={trailerData}\r\n          ></MovieDetail>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useState } from \"react\";\nimport classes from \"./Search.module.css\";\nimport NavBar from \"../components/upper/NavBar\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\n\nconst API_KEY = \"292c6915aed6c1ea24bb47d8b5d3ca92\";\n\nconst Search = () => {\n  const [searchFounded, setSearchFounded] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  const sendRequest = async (query) => {\n    setIsLoading(true);\n    try {\n      const request = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1`\n      );\n      const data = await request.json();\n      setSearchFounded(data);\n    } catch (err) {}\n    setIsLoading(false);\n  };\n  console.log(searchFounded);\n  return (\n    <div className=\"app\">\n      <NavBar></NavBar>\n      <SearchForm searchHandler={sendRequest}></SearchForm>\n      {isLoading || (\n        <ResultList searchedData={searchFounded.results}></ResultList>\n      )}\n      <div className={classes.footer}></div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Browse from \"./pages/browse/Browse\";\nimport Search from \"./pages/search/Search\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/myphimmoi\" element={<Browse />} />\n        <Route path=\"/myphimmoi/search\" element={<Search />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}