{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\Submit\\\\RJS301x_1.0-A_VN\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\components\\\\middle\\\\MovieList.jsx\";\nimport React from \"react\";\nimport { useState } from \"react\";\n// import { useContext } from \"react\";\n// import ApiContext from \"../../store/api-contex\";\nimport { useHttpTrailer } from \"../../hooks/useHttpTrailer\";\nimport classes from \"./MovieList.module.css\";\nimport Movie from \"./Movie\";\nexport default function MovieList({\n  poster,\n  movData\n}) {\n  const [pop, setPop] = useState(false);\n  const [inviMov, setInviMov] = useState({});\n  const [trailerData, setTrailerData] = useState({});\n  async function sendRequest(trailerID) {\n    try {\n      // Gửi request lấy trailer\n      const request = await fetch(`https://api.themoviedb.org/3/movie/${trailerID}/videos?api_key=${API_KEY} `);\n      const resData = await request.json();\n      // Lưu vào resData để đưa ra\n      setTrailerData(resData);\n      if (!request.ok) {\n        throw new Error(\"Failed to fetch movie\");\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  const infoHandler = choosenMov => {\n    setInviMov(choosenMov);\n    setPop(prevPop => !prevPop);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"mov-list\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, movData.results.map(data => /*#__PURE__*/React.createElement(Movie, {\n    infoPop: infoHandler,\n    poster: poster,\n    key: data.id,\n    movData: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))), pop && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, inviMov.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Release Date:\", inviMov.release_date), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Vote : \", inviMov.vote_average), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, inviMov.overview)), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","useHttpTrailer","classes","Movie","MovieList","poster","movData","pop","setPop","inviMov","setInviMov","trailerData","setTrailerData","sendRequest","trailerID","request","fetch","API_KEY","resData","json","ok","Error","err","console","error","infoHandler","choosenMov","prevPop","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","results","map","data","infoPop","key","id","info","title","release_date","vote_average","overview"],"sources":["D:/WORK/Submit/RJS301x_1.0-A_VN/Assignment 02 (Starter Code)/src/pages/components/middle/MovieList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n// import { useContext } from \"react\";\r\n// import ApiContext from \"../../store/api-contex\";\r\nimport { useHttpTrailer } from \"../../hooks/useHttpTrailer\";\r\n\r\nimport classes from \"./MovieList.module.css\";\r\nimport Movie from \"./Movie\";\r\nexport default function MovieList({ poster, movData }) {\r\n  const [pop, setPop] = useState(false);\r\n  const [inviMov, setInviMov] = useState({});\r\n  const [trailerData, setTrailerData] = useState({});\r\n  async function sendRequest(trailerID) {\r\n    try {\r\n      // Gửi request lấy trailer\r\n      const request = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${trailerID}/videos?api_key=${API_KEY} `\r\n      );\r\n      const resData = await request.json();\r\n      // Lưu vào resData để đưa ra\r\n      setTrailerData(resData);\r\n      if (!request.ok) {\r\n        throw new Error(\"Failed to fetch movie\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n  const infoHandler = (choosenMov) => {\r\n    setInviMov(choosenMov);\r\n    setPop((prevPop) => !prevPop);\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"mov-list\"]}>\r\n      <ul>\r\n        {movData.results.map((data) => (\r\n          <Movie\r\n            infoPop={infoHandler}\r\n            poster={poster}\r\n            key={data.id}\r\n            movData={data}\r\n          ></Movie>\r\n        ))}\r\n      </ul>\r\n      {pop && (\r\n        <div className={classes.info}>\r\n          <section>\r\n            <h3>{inviMov.title}</h3>\r\n            <div>Release Date:{inviMov.release_date}</div>\r\n            <div>Vote : {inviMov.vote_average}</div>\r\n            <div>{inviMov.overview}</div>\r\n          </section>\r\n          <section></section>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA;AACA,SAASC,cAAc,QAAQ,4BAA4B;AAE3D,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,KAAK,MAAM,SAAS;AAC3B,eAAe,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EACrD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,eAAea,WAAWA,CAACC,SAAS,EAAE;IACpC,IAAI;MACF;MACA,MAAMC,OAAO,GAAG,MAAMC,KAAK,CACxB,sCAAqCF,SAAU,mBAAkBG,OAAQ,GAC5E,CAAC;MACD,MAAMC,OAAO,GAAG,MAAMH,OAAO,CAACI,IAAI,CAAC,CAAC;MACpC;MACAP,cAAc,CAACM,OAAO,CAAC;MACvB,IAAI,CAACH,OAAO,CAACK,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF;EACA,MAAMG,WAAW,GAAIC,UAAU,IAAK;IAClChB,UAAU,CAACgB,UAAU,CAAC;IACtBlB,MAAM,CAAEmB,OAAO,IAAK,CAACA,OAAO,CAAC;EAC/B,CAAC;EAED,oBACE5B,KAAA,CAAA6B,aAAA;IAAKC,SAAS,EAAE3B,OAAO,CAAC,UAAU,CAAE;IAAA4B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACG7B,OAAO,CAAC8B,OAAO,CAACC,GAAG,CAAEC,IAAI,iBACxBvC,KAAA,CAAA6B,aAAA,CAACzB,KAAK;IACJoC,OAAO,EAAEd,WAAY;IACrBpB,MAAM,EAAEA,MAAO;IACfmC,GAAG,EAAEF,IAAI,CAACG,EAAG;IACbnC,OAAO,EAAEgC,IAAK;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACR,CACT,CACC,CAAC,EACJ5B,GAAG,iBACFR,KAAA,CAAA6B,aAAA;IAAKC,SAAS,EAAE3B,OAAO,CAACwC,IAAK;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK1B,OAAO,CAACkC,KAAU,CAAC,eACxB5C,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,eAAa,EAAC1B,OAAO,CAACmC,YAAkB,CAAC,eAC9C7C,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,SAAO,EAAC1B,OAAO,CAACoC,YAAkB,CAAC,eACxC9C,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM1B,OAAO,CAACqC,QAAc,CACrB,CAAC,eACV/C,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAkB,CACf,CAEJ,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}