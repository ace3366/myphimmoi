{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport function useHttpTrailer(trailerID) {\n  const [trailerData, setTrailerData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const API_KEY = \"292c6915aed6c1ea24bb47d8b5d3ca92\";\n  useEffect(() => {\n    async function sendRequest() {\n      // console.log(trailerID);\n      setIsLoading(true);\n      try {\n        // Gửi request lấy trailer\n        const request = await fetch(`https://api.themoviedb.org/3/movie/${trailerID}/videos?api_key=${API_KEY} `);\n        const resData = await request.json();\n\n        // Lưu vào resData để đưa ra\n        setTrailerData(resData);\n        if (!request.ok) {\n          throw new Error(\"Failed to fetch movie\");\n        }\n      } catch (err) {\n        console.error(err);\n      }\n      setIsLoading(false);\n    }\n    sendRequest();\n  }, []);\n\n  // Gọi hàm chạy ở lần render đầu tiên\n\n  return {\n    trailerData,\n    isLoading\n  };\n}","map":{"version":3,"names":["useState","useEffect","useHttpTrailer","trailerID","trailerData","setTrailerData","isLoading","setIsLoading","API_KEY","sendRequest","request","fetch","resData","json","ok","Error","err","console","error"],"sources":["D:/WORK/Submit/RJS301x_1.0-A_VN/Assignment 02 (Starter Code)/src/pages/hooks/useHttpTrailer.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nexport function useHttpTrailer(trailerID) {\r\n  const [trailerData, setTrailerData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const API_KEY = \"292c6915aed6c1ea24bb47d8b5d3ca92\";\r\n  useEffect(() => {\r\n    async function sendRequest() {\r\n      // console.log(trailerID);\r\n      setIsLoading(true);\r\n      try {\r\n        // Gửi request lấy trailer\r\n        const request = await fetch(\r\n          `https://api.themoviedb.org/3/movie/${trailerID}/videos?api_key=${API_KEY} `\r\n        );\r\n        const resData = await request.json();\r\n\r\n        // Lưu vào resData để đưa ra\r\n        setTrailerData(resData);\r\n        if (!request.ok) {\r\n          throw new Error(\"Failed to fetch movie\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    sendRequest();\r\n  }, []);\r\n\r\n  // Gọi hàm chạy ở lần render đầu tiên\r\n\r\n  return {\r\n    trailerData,\r\n    isLoading,\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,SAASC,cAAcA,CAACC,SAAS,EAAE;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMQ,OAAO,GAAG,kCAAkC;EAClDP,SAAS,CAAC,MAAM;IACd,eAAeQ,WAAWA,CAAA,EAAG;MAC3B;MACAF,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF;QACA,MAAMG,OAAO,GAAG,MAAMC,KAAK,CACxB,sCAAqCR,SAAU,mBAAkBK,OAAQ,GAC5E,CAAC;QACD,MAAMI,OAAO,GAAG,MAAMF,OAAO,CAACG,IAAI,CAAC,CAAC;;QAEpC;QACAR,cAAc,CAACO,OAAO,CAAC;QACvB,IAAI,CAACF,OAAO,CAACI,EAAE,EAAE;UACf,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;MACAT,YAAY,CAAC,KAAK,CAAC;IACrB;IACAE,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,OAAO;IACLL,WAAW;IACXE;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}