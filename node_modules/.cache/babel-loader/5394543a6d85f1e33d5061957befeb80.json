{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\Submit\\\\RJS301x_1.0-A_VN\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\components\\\\middle\\\\MovieList.jsx\";\nimport React from \"react\";\nimport { useState } from \"react\";\n// import { useContext } from \"react\";\n// import ApiContext from \"../../store/api-contex\";\n// import { useHttpTrailer } from \"../../hooks/useHttpTrailer\";\nimport { trailerExtract } from \"../../util/trailerAccess.js\";\nimport classes from \"./MovieList.module.css\";\nimport Movie from \"./Movie\";\nlet dataTrailer = {};\nexport default function MovieList({\n  poster,\n  movData\n}) {\n  // const [inviMov, setInviMov] = useState(null);\n  // const [trailerData, setTrailerData] = useState({});\n  // // Hàm xử lý khi ấn vào một bộ phim\n  // async function sendRequest(choosenMov) {\n  //   try {\n  //     // Gửi request lấy trailer\n  //     const request = await fetch(\n  //       `https://api.themoviedb.org/3/movie/${choosenMov.id}/videos?api_key=292c6915aed6c1ea24bb47d8b5d3ca92 `\n  //     );\n  //     const resData = await request.json();\n  //     // Lấy dữ liệu trailer, nếu không có kết quả nào thoả thì trả về null\n  //     dataTrailer = trailerExtract(resData);\n\n  //     // Kiểm tra cú click này có trùng movie với lần trước không\n  //     // Nếu trùng thì đóng phần info\n  //     // Nếu không thì hiện info movie khác\n  //     setInviMov((prevMov) => (prevMov === choosenMov ? null : choosenMov));\n\n  //     if (!request.ok) {\n  //       throw new Error(\"Failed to fetch movie\");\n  //     }\n  //   } catch (err) {\n  //     console.error(err);\n  //     // Nếu không fetch được data trailer thì thực hiện chức năng như bình thường\n  //     // Đồng thời cho dữ liệu trailer là null để hiển thị backdrop thay thế\n  //     dataTrailer = null;\n  //     setInviMov((prevMov) => (prevMov === choosenMov ? null : choosenMov));\n  //   }\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes[\"mov-list\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, movData.results.map(data => /*#__PURE__*/React.createElement(Movie, {\n    infoPop: sendRequest,\n    poster: poster,\n    key: data.id,\n    movData: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), inviMov && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: classes[\"trailer-info\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, inviMov.title || inviMov.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Release Date: \", inviMov.release_date), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Vote : \", inviMov.vote_average), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, inviMov.overview)), /*#__PURE__*/React.createElement(\"section\", {\n    className: classes[\"trailer-media\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, dataTrailer ? /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"400\",\n    src: `https://www.youtube.com/embed/${dataTrailer.key}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/original${inviMov.backdrop_path}`,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })))));\n}","map":{"version":3,"names":["React","useState","trailerExtract","classes","Movie","dataTrailer","MovieList","poster","movData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","movie","results","map","data","infoPop","sendRequest","key","id","inviMov","info","title","name","release_date","vote_average","overview","width","height","src","backdrop_path","alt"],"sources":["D:/WORK/Submit/RJS301x_1.0-A_VN/Assignment 02 (Starter Code)/src/pages/components/middle/MovieList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n// import { useContext } from \"react\";\r\n// import ApiContext from \"../../store/api-contex\";\r\n// import { useHttpTrailer } from \"../../hooks/useHttpTrailer\";\r\nimport { trailerExtract } from \"../../util/trailerAccess.js\";\r\nimport classes from \"./MovieList.module.css\";\r\nimport Movie from \"./Movie\";\r\nlet dataTrailer = {};\r\nexport default function MovieList({ poster, movData }) {\r\n  // const [inviMov, setInviMov] = useState(null);\r\n  // const [trailerData, setTrailerData] = useState({});\r\n  // // Hàm xử lý khi ấn vào một bộ phim\r\n  // async function sendRequest(choosenMov) {\r\n  //   try {\r\n  //     // Gửi request lấy trailer\r\n  //     const request = await fetch(\r\n  //       `https://api.themoviedb.org/3/movie/${choosenMov.id}/videos?api_key=292c6915aed6c1ea24bb47d8b5d3ca92 `\r\n  //     );\r\n  //     const resData = await request.json();\r\n  //     // Lấy dữ liệu trailer, nếu không có kết quả nào thoả thì trả về null\r\n  //     dataTrailer = trailerExtract(resData);\r\n\r\n  //     // Kiểm tra cú click này có trùng movie với lần trước không\r\n  //     // Nếu trùng thì đóng phần info\r\n  //     // Nếu không thì hiện info movie khác\r\n  //     setInviMov((prevMov) => (prevMov === choosenMov ? null : choosenMov));\r\n\r\n  //     if (!request.ok) {\r\n  //       throw new Error(\"Failed to fetch movie\");\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.error(err);\r\n  //     // Nếu không fetch được data trailer thì thực hiện chức năng như bình thường\r\n  //     // Đồng thời cho dữ liệu trailer là null để hiển thị backdrop thay thế\r\n  //     dataTrailer = null;\r\n  //     setInviMov((prevMov) => (prevMov === choosenMov ? null : choosenMov));\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className={classes[\"mov-list\"]}>\r\n      {/* Phần hiển thị list phim */}\r\n      <ul className={classes.movie}>\r\n        {movData.results.map((data) => (\r\n          <Movie\r\n            infoPop={sendRequest}\r\n            poster={poster}\r\n            key={data.id}\r\n            movData={data}\r\n          ></Movie>\r\n        ))}\r\n      </ul>\r\n      {/* Phần hiển thị thông tin khi người dùng click */}\r\n      {inviMov && (\r\n        <div className={classes.info}>\r\n          <section className={classes[\"trailer-info\"]}>\r\n            <h3>{inviMov.title || inviMov.name}</h3>\r\n            <div>Release Date: {inviMov.release_date}</div>\r\n            <div>Vote : {inviMov.vote_average}</div>\r\n            <p>{inviMov.overview}</p>\r\n          </section>\r\n          <section className={classes[\"trailer-media\"]}>\r\n            {/* Nếu có trailer thì hiện trailer, không có sẽ hiện backdrop */}\r\n            {dataTrailer ? (\r\n              <iframe\r\n                width=\"100%\"\r\n                height=\"400\"\r\n                src={`https://www.youtube.com/embed/${dataTrailer.key}`}\r\n              ></iframe>\r\n            ) : (\r\n              <div>\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/original${inviMov.backdrop_path}`}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}