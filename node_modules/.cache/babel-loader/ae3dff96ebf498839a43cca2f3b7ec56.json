{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport function useHttpTrailer(trailerExtract) {\n  const [inviMov, setInviMov] = useState(null);\n  const [trailerData, setTrailerData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const API_KEY = \"292c6915aed6c1ea24bb47d8b5d3ca92\";\n  function infoHandler(choosenMov) {\n    // Kiểm tra cú click này có trùng movie với lần trước không\n    // Nếu trùng thì đóng phần info\n    // Nếu không thì hiện info movie khác\n    setInviMov(prevMov => prevMov === choosenMov ? null : choosenMov);\n  }\n  useEffect(() => {\n    async function sendRequest() {\n      setIsLoading(true);\n      try {\n        // Gửi request lấy trailer\n        const request = await fetch(`https://api.themoviedb.org/3/movie/${inviMov.id}/videos?api_key=${API_KEY} `);\n        const resData = await request.json();\n        // Lấy dữ liệu trailer, nếu không có kết quả nào thoả thì trả về null\n        // Lưu thông tin trailer nhận được\n        setTrailerData(trailerExtract(resData));\n        if (!request.ok) {\n          throw new Error(\"Failed to fetch movie\");\n        }\n      } catch (err) {\n        console.error(err);\n        // Nếu không fetch được data trailer thì thực hiện chức năng như bình thường\n        // Đồng thời cho dữ liệu trailer là null để hiển thị backdrop thay thế\n        setTrailerData(null);\n      }\n      setIsLoading(false);\n    }\n    sendRequest();\n  }, [inviMov]);\n  return {\n    inviMov,\n    trailerData,\n    isLoading,\n    infoHandler\n  };\n}","map":{"version":3,"names":["useState","useEffect","useHttpTrailer","trailerExtract","inviMov","setInviMov","trailerData","setTrailerData","isLoading","setIsLoading","API_KEY","infoHandler","choosenMov","prevMov","sendRequest","request","fetch","id","resData","json","ok","Error","err","console","error"],"sources":["D:/WORK/Submit/RJS301x_1.0-A_VN/Assignment 02 (Starter Code)/src/pages/hooks/useHttpTrailer.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nexport function useHttpTrailer(trailerExtract) {\r\n  const [inviMov, setInviMov] = useState(null);\r\n  const [trailerData, setTrailerData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const API_KEY = \"292c6915aed6c1ea24bb47d8b5d3ca92\";\r\n\r\n  function infoHandler(choosenMov) {\r\n    // Kiểm tra cú click này có trùng movie với lần trước không\r\n    // Nếu trùng thì đóng phần info\r\n    // Nếu không thì hiện info movie khác\r\n    setInviMov((prevMov) => (prevMov === choosenMov ? null : choosenMov));\r\n  }\r\n  useEffect(() => {\r\n    async function sendRequest() {\r\n      setIsLoading(true);\r\n      try {\r\n        // Gửi request lấy trailer\r\n        const request = await fetch(\r\n          `https://api.themoviedb.org/3/movie/${inviMov.id}/videos?api_key=${API_KEY} `\r\n        );\r\n        const resData = await request.json();\r\n        // Lấy dữ liệu trailer, nếu không có kết quả nào thoả thì trả về null\r\n        // Lưu thông tin trailer nhận được\r\n        setTrailerData(trailerExtract(resData));\r\n        if (!request.ok) {\r\n          throw new Error(\"Failed to fetch movie\");\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        // Nếu không fetch được data trailer thì thực hiện chức năng như bình thường\r\n        // Đồng thời cho dữ liệu trailer là null để hiển thị backdrop thay thế\r\n        setTrailerData(null);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n\r\n    sendRequest();\r\n  }, [inviMov]);\r\n\r\n  return {\r\n    inviMov,\r\n    trailerData,\r\n    isLoading,\r\n    infoHandler,\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,SAASC,cAAcA,CAACC,cAAc,EAAE;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMU,OAAO,GAAG,kCAAkC;EAElD,SAASC,WAAWA,CAACC,UAAU,EAAE;IAC/B;IACA;IACA;IACAP,UAAU,CAAEQ,OAAO,IAAMA,OAAO,KAAKD,UAAU,GAAG,IAAI,GAAGA,UAAW,CAAC;EACvE;EACAX,SAAS,CAAC,MAAM;IACd,eAAea,WAAWA,CAAA,EAAG;MAC3BL,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF;QACA,MAAMM,OAAO,GAAG,MAAMC,KAAK,CACxB,sCAAqCZ,OAAO,CAACa,EAAG,mBAAkBP,OAAQ,GAC7E,CAAC;QACD,MAAMQ,OAAO,GAAG,MAAMH,OAAO,CAACI,IAAI,CAAC,CAAC;QACpC;QACA;QACAZ,cAAc,CAACJ,cAAc,CAACe,OAAO,CAAC,CAAC;QACvC,IAAI,CAACH,OAAO,CAACK,EAAE,EAAE;UACf,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClB;QACA;QACAf,cAAc,CAAC,IAAI,CAAC;MACtB;MACAE,YAAY,CAAC,KAAK,CAAC;IACrB;IAEAK,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC;EAEb,OAAO;IACLA,OAAO;IACPE,WAAW;IACXE,SAAS;IACTG;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}