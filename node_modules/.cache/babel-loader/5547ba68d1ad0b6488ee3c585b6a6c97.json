{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\Submit\\\\RJS301x_1.0-A_VN\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\components\\\\upper\\\\Banner.jsx\";\nimport React from \"react\";\nimport classes from \"./Banner.module.css\";\nimport { useHttp } from \"../hooks/useHttp\";\nimport { bannerAccess } from \"../util/bannerAccess.js\";\nimport ApiContext from \"../store/api-contex\";\nexport default function Banner({\n  banner\n}) {\n  // Kiểm tra data đã load xong chưa để lấy banner ra\n  const {\n    movieData: ogData,\n    isLoading: ogLoad\n  } = useHttp(requests.fetchNetflixOriginals);\n  if (!ogLoad) {\n    bannerInfo = bannerAccess(ogData);\n  }\n  const imgPath = `https://image.tmdb.org/t/p/original${banner.backdrop_path}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.banner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes[\"banner-img\"],\n    src: imgPath,\n    alt: \"banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.about,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, banner.name), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"My List\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, banner.overview.slice(0, 100))));\n}","map":{"version":3,"names":["React","classes","useHttp","bannerAccess","ApiContext","Banner","banner","movieData","ogData","isLoading","ogLoad","requests","fetchNetflixOriginals","bannerInfo","imgPath","backdrop_path","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","overlay","about","name","overview","slice"],"sources":["D:/WORK/Submit/RJS301x_1.0-A_VN/Assignment 02 (Starter Code)/src/pages/components/upper/Banner.jsx"],"sourcesContent":["import React from \"react\";\r\nimport classes from \"./Banner.module.css\";\r\nimport { useHttp } from \"../hooks/useHttp\";\r\nimport { bannerAccess } from \"../util/bannerAccess.js\";\r\nimport ApiContext from \"../store/api-contex\";\r\n\r\nexport default function Banner({ banner }) {\r\n  // Kiểm tra data đã load xong chưa để lấy banner ra\r\n  const { movieData: ogData, isLoading: ogLoad } = useHttp(\r\n    requests.fetchNetflixOriginals\r\n  );\r\n  if (!ogLoad) {\r\n    bannerInfo = bannerAccess(ogData);\r\n  }\r\n\r\n  const imgPath = `https://image.tmdb.org/t/p/original${banner.backdrop_path}`;\r\n  return (\r\n    <div className={classes.banner}>\r\n      <img className={classes[\"banner-img\"]} src={imgPath} alt=\"banner\" />\r\n      <div className={classes.overlay}></div>\r\n      <div className={classes.about}>\r\n        <h2>{banner.name}</h2>\r\n        <button>Play</button>\r\n        <button>My List</button>\r\n        <p>{banner.overview.slice(0, 100)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,UAAU,MAAM,qBAAqB;AAE5C,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACzC;EACA,MAAM;IAAEC,SAAS,EAAEC,MAAM;IAAEC,SAAS,EAAEC;EAAO,CAAC,GAAGR,OAAO,CACtDS,QAAQ,CAACC,qBACX,CAAC;EACD,IAAI,CAACF,MAAM,EAAE;IACXG,UAAU,GAAGV,YAAY,CAACK,MAAM,CAAC;EACnC;EAEA,MAAMM,OAAO,GAAI,sCAAqCR,MAAM,CAACS,aAAc,EAAC;EAC5E,oBACEf,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAEhB,OAAO,CAACK,MAAO;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7BvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAEhB,OAAO,CAAC,YAAY,CAAE;IAACuB,GAAG,EAAEV,OAAQ;IAACW,GAAG,EAAC,QAAQ;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpEvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAEhB,OAAO,CAACyB,OAAQ;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eACvCvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAEhB,OAAO,CAAC0B,KAAM;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BvB,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKjB,MAAM,CAACsB,IAAS,CAAC,eACtB5B,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,MAAY,CAAC,eACrBvB,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,SAAe,CAAC,eACxBvB,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIjB,MAAM,CAACuB,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAK,CAClC,CACF,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}