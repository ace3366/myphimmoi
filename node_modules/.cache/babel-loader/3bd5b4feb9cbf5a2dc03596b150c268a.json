{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport function useHttp(movieRequest) {\n  const [movieData, setMovieData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    async function sendRequest() {\n      setIsLoading(true);\n      try {\n        const request = movieRequest.map(movie => fetch(`https://api.themoviedb.org/3${movie[1]} `));\n        const responses = await Promise.all(request);\n        const resData = await Promise.all(responses.map(response => response.json()));\n        setMovieData(resData);\n        if (!request.ok) {\n          throw new Error(\"Failed to fetch movie\");\n        }\n        setMovieData(resData);\n      } catch (err) {\n        console.error(err);\n      }\n      setIsLoading(false);\n    }\n    sendRequest();\n  }, []);\n\n  // Gọi hàm chạy ở lần render đầu tiên\n\n  return {\n    movieData,\n    isLoading\n  };\n}","map":{"version":3,"names":["useState","useEffect","useHttp","movieRequest","movieData","setMovieData","isLoading","setIsLoading","sendRequest","request","map","movie","fetch","responses","Promise","all","resData","response","json","ok","Error","err","console","error"],"sources":["D:/WORK/Submit/RJS301x_1.0-A_VN/Assignment 02 (Starter Code)/src/pages/hooks/useHttp.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nexport function useHttp(movieRequest) {\r\n  const [movieData, setMovieData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    async function sendRequest() {\r\n      setIsLoading(true);\r\n      try {\r\n        const request = movieRequest.map((movie) =>\r\n          fetch(`https://api.themoviedb.org/3${movie[1]} `)\r\n        );\r\n        const responses = await Promise.all(request);\r\n        const resData = await Promise.all(\r\n          responses.map((response) => response.json())\r\n        );\r\n        setMovieData(resData);\r\n        if (!request.ok) {\r\n          throw new Error(\"Failed to fetch movie\");\r\n        }\r\n        setMovieData(resData);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    sendRequest();\r\n  }, []);\r\n\r\n  // Gọi hàm chạy ở lần render đầu tiên\r\n\r\n  return {\r\n    movieData,\r\n    isLoading,\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,SAASC,OAAOA,CAACC,YAAY,EAAE;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChDC,SAAS,CAAC,MAAM;IACd,eAAeO,WAAWA,CAAA,EAAG;MAC3BD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAME,OAAO,GAAGN,YAAY,CAACO,GAAG,CAAEC,KAAK,IACrCC,KAAK,CAAE,+BAA8BD,KAAK,CAAC,CAAC,CAAE,GAAE,CAClD,CAAC;QACD,MAAME,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;QAC5C,MAAMO,OAAO,GAAG,MAAMF,OAAO,CAACC,GAAG,CAC/BF,SAAS,CAACH,GAAG,CAAEO,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC7C,CAAC;QACDb,YAAY,CAACW,OAAO,CAAC;QACrB,IAAI,CAACP,OAAO,CAACU,EAAE,EAAE;UACf,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACAf,YAAY,CAACW,OAAO,CAAC;MACvB,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;MACAd,YAAY,CAAC,KAAK,CAAC;IACrB;IACAC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,OAAO;IACLJ,SAAS;IACTE;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}