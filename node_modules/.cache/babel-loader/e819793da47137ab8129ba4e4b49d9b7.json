{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORK\\\\Submit\\\\RJS301x_1.0-A_VN\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\components\\\\upper\\\\Banner.jsx\";\nimport React from \"react\";\nimport classes from \"./Banner.module.css\";\nimport { useHttp } from \"../../hooks/useHttp\";\nimport { bannerAccess } from \"../../util/bannerAccess.js\";\nconst API_KEY = \"292c6915aed6c1ea24bb47d8b5d3ca92\";\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`\n};\nlet banner = {};\nexport default function Banner() {\n  const {\n    movieData,\n    isLoading\n  } = useHttp(requests.fetchNetflixOriginals);\n  // Kiểm tra data đã load xong chưa để lấy banner ra\n  if (!isLoading) {\n    banner = bannerAccess(movieData);\n    console.log(\"g\");\n    const imgPath = `https://image.tmdb.org/t/p/original${banner.backdrop_path}`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.banner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes[\"banner-img\"],\n      src: imgPath,\n      alt: \"banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.about,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, banner.name), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"My List\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, banner.overview.slice(0, 100))));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"names":["React","classes","useHttp","bannerAccess","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","banner","Banner","movieData","isLoading","console","log","imgPath","backdrop_path","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","overlay","about","name","overview","slice"],"sources":["D:/WORK/Submit/RJS301x_1.0-A_VN/Assignment 02 (Starter Code)/src/pages/components/upper/Banner.jsx"],"sourcesContent":["import React from \"react\";\r\nimport classes from \"./Banner.module.css\";\r\nimport { useHttp } from \"../../hooks/useHttp\";\r\nimport { bannerAccess } from \"../../util/bannerAccess.js\";\r\n\r\nconst API_KEY = \"292c6915aed6c1ea24bb47d8b5d3ca92\";\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\r\n};\r\nlet banner = {};\r\n\r\nexport default function Banner() {\r\n  const { movieData, isLoading } = useHttp(requests.fetchNetflixOriginals);\r\n  // Kiểm tra data đã load xong chưa để lấy banner ra\r\n  if (!isLoading) {\r\n    banner = bannerAccess(movieData);\r\n    console.log(\"g\");\r\n    const imgPath = `https://image.tmdb.org/t/p/original${banner.backdrop_path}`;\r\n    return (\r\n      <div className={classes.banner}>\r\n        <img className={classes[\"banner-img\"]} src={imgPath} alt=\"banner\" />\r\n        <div className={classes.overlay}></div>\r\n        <div className={classes.about}>\r\n          <h2>{banner.name}</h2>\r\n          <button>Play</button>\r\n          <button>My List</button>\r\n          <p>{banner.overview.slice(0, 100)}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <div></div>;\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,YAAY,QAAQ,4BAA4B;AAEzD,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG;EACfC,aAAa,EAAG,8BAA6BF,OAAQ,iBAAgB;EACrEG,qBAAqB,EAAG,wBAAuBH,OAAQ,mBAAkB;EACzEI,aAAa,EAAG,4BAA2BJ,OAAQ,iBAAgB;EACnEK,iBAAiB,EAAG,2BAA0BL,OAAQ,iBAAgB;EACtEM,iBAAiB,EAAG,2BAA0BN,OAAQ,iBAAgB;EACtEO,iBAAiB,EAAG,2BAA0BP,OAAQ,iBAAgB;EACtEQ,kBAAkB,EAAG,2BAA0BR,OAAQ,oBAAmB;EAC1ES,kBAAkB,EAAG,2BAA0BT,OAAQ,iBAAgB;EACvEU,WAAW,EAAG,yBAAwBV,OAAQ;AAChD,CAAC;AACD,IAAIW,MAAM,GAAG,CAAC,CAAC;AAEf,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B,MAAM;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAGhB,OAAO,CAACG,QAAQ,CAACE,qBAAqB,CAAC;EACxE;EACA,IAAI,CAACW,SAAS,EAAE;IACdH,MAAM,GAAGZ,YAAY,CAACc,SAAS,CAAC;IAChCE,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB,MAAMC,OAAO,GAAI,sCAAqCN,MAAM,CAACO,aAAc,EAAC;IAC5E,oBACEtB,KAAA,CAAAuB,aAAA;MAAKC,SAAS,EAAEvB,OAAO,CAACc,MAAO;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC7B9B,KAAA,CAAAuB,aAAA;MAAKC,SAAS,EAAEvB,OAAO,CAAC,YAAY,CAAE;MAAC8B,GAAG,EAAEV,OAAQ;MAACW,GAAG,EAAC,QAAQ;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,eACpE9B,KAAA,CAAAuB,aAAA;MAAKC,SAAS,EAAEvB,OAAO,CAACgC,OAAQ;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAM,CAAC,eACvC9B,KAAA,CAAAuB,aAAA;MAAKC,SAAS,EAAEvB,OAAO,CAACiC,KAAM;MAAAT,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC5B9B,KAAA,CAAAuB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKf,MAAM,CAACoB,IAAS,CAAC,eACtBnC,KAAA,CAAAuB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,MAAY,CAAC,eACrB9B,KAAA,CAAAuB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAQ,SAAe,CAAC,eACxB9B,KAAA,CAAAuB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAIf,MAAM,CAACqB,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAK,CAClC,CACF,CAAC;EAEV;EACA,oBAAOrC,KAAA,CAAAuB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAU,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module"}